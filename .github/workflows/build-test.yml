name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Pull and start containers
        run: docker-compose up -d

      - name: Execute commands in container
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          CONTAINER_ID=$(docker ps -qf "name=${REPO_NAME}") # Use the repo name as the container name
          docker exec $CONTAINER_ID git clone https://github.com/${{ github.repository }} /app # Clone into /app
          docker exec $CONTAINER_ID python /app/setup.py install # Run setup.py from the root
          docker exec $CONTAINER_ID python -m unittest discover /app/tests # Run tests

      - name: Check test results
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          if docker exec $CONTAINER_ID python -m unittest discover /app/tests; then
            echo "Tests passed. Deploying..."
            # Add deployment steps here
          else
            echo "Tests failed. Creating an issue..."
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"title": "Test Failure on Main", "body": "Tests failed on the main branch. Please investigate."}' \
              https://api.github.com/repos/${{ github.repository }}/issues
          fi
